function C8_frontalswing_postprocessing

global tractor NumberOfRows ExcelFileName S results  
global frontalswing_results Truckname Excelsave viewpoint_frontalswing
global frontalswing_filename frontalswing_wrl

javaaddpath(which('MatlabGarbageCollector.jar'));
org.dt.matlab.utilities.JavaMemoryCleaner.clear(1);
clc;

%% Frontal Swing tab lay-out

set(S.tab11,'Parent', S.tgroup);

S.tgroup_frontalswing = uitabgroup('Parent',S.tab11, 'tablocation', 'right');
S.PBS_tab = uitab('Parent', S.tgroup_frontalswing, 'backgroundcolor','w', 'Title','PBS Data');
S.frontalswing_visual_tab = uitab('Parent', S.tgroup_frontalswing, 'backgroundcolor','w', 'Title','Visulaization');

S.back_button = uicontrol('parent', S.PBS_tab,...
                          'style','pushbutton',...
                          'BackgroundColor','w',...
                          'String','Back',...
                          'FontSize',10,...
                          'FontUnits','Normalized',...
                          'FontWeight','bold',...
                          'ForeGroundColor','r',...
                          'units','normalized',...
                          'position',[0.005 0.94 0.1 0.05],...
                          'Callback',@Back_callback);
                      
S.Frontalswing_title = uicontrol('Parent',              S.PBS_tab,...
                                 'Style',               'text',...
                                 'String',              'Frontal swing',...
                                 'Backgroundcolor',     'w',...
                                 'FontSize',            12,...
                                 'FontUnits','Normalized',...
                                 'FontWeight',          'bold',...
                                 'Units',               'Normalized',...
                                 'Position',            [-0.725 0.9 0.4 0.05]);

S.semitrailer_panel = uipanel('Parent',             S.PBS_tab,...
                              'Units',              'Centimeters',...
                              'Position',           [3 11 8 5],...    
                              'backgroundcolor',    'w',...
                              'Title',              'Performance Levels',...
                              'Units',              'Normalized',...
                              'FontWeight',         'bold',...
                              'FontSize',           12,...
                              'FontUnits','Normalized',...
                              'BorderWidth',        2,...
                              'BorderType',         'Line',...
                              'highlightcolor',     'k');

S.MoD_edit = uicontrol('Parent',            S.semitrailer_panel,...
                       'Style',             'edit', ...
                       'Backgroundcolor',   'w',...
                       'FontSize',          6,...
                       'FontUnits','Normalized',...
                       'enable',            'off',...
                       'Units',             'Normalized',...
                       'Position',          [0.1 0.5 0.2 0.2]);                           

S.MoD_text = uicontrol('Parent',            S.semitrailer_panel,...
                       'Style',             'text',...
                       'String',            'Maximum of Difference (m)',...
                       'FontSize',          6,...
                       'FontUnits','Normalized',...
                       'backgroundcolor',   'w',...
                       'Units',             'Normalized',...
                       'Position',          [0.05 0.75 0.3 0.2]); 

S.MoDlevel_edit = uicontrol('Parent',               S.semitrailer_panel,...
                            'Style',                'edit', ...
                            'Backgroundcolor',      'w',...
                            'FontSize',             6,...
                            'FontUnits','Normalized',...
                            'enable',               'off',...
                            'Units',                'Normalized',...
                            'Position',             [0.6 0.5 0.2 0.2]);                           

S.MoDlevel_text = uicontrol('Parent',           S.semitrailer_panel,...
                            'Style',            'text',...
                            'String',           'Level', ...
                            'FontSize',         8,...
                            'FontUnits','Normalized',...
                            'backgroundcolor',  'w',...
                            'Units',            'Normalized',...
                            'Position',         [0.6 0.75 0.2 0.15]); 

S.DoM_edit = uicontrol('Parent',            S.semitrailer_panel,...
                       'Style',             'edit', ...
                       'Backgroundcolor',   'w',...
                       'FontSize',          6,...
                       'FontUnits','Normalized',...
                       'enable',            'off',...
                       'Units',             'Normalized',...
                       'Position',          [0.1 0.05 0.2 0.2]);                           

S.DoM_text = uicontrol('Parent',            S.semitrailer_panel,...
                       'Style',             'text',...
                       'String',            'Difference of Maxima (m)',...
                       'FontSize',          6,...
                       'FontUnits','Normalized',...
                       'backgroundcolor',   'w',...
                       'Units',             'Normalized',...
                       'Position',          [0.05 0.275 0.3 0.2]);                         

S.DoMlevel_edit = uicontrol('Parent',               S.semitrailer_panel,...
                            'Style',                'edit', ...
                            'Backgroundcolor',      'w',...
                            'FontSize',             6,...
                            'FontUnits','Normalized',...
                            'enable',               'off',...
                            'Units',                'Normalized',...
                            'Position',             [0.6 0.05 0.2 0.2]);                           

S.DoMlevel_text = uicontrol('Parent',           S.semitrailer_panel,...
                            'Style',            'text',...
                            'String',           'Level', ...
                            'FontSize',         8,...
                            'FontUnits','Normalized',...
                            'backgroundcolor',  'w',...
                            'Units',            'Normalized',...
                            'Position',         [0.6 0.3 0.2 0.15]);                         


S.truck_panel = uipanel('Parent',           S.PBS_tab,...
                        'Units',            'Centimeters',...
                        'Position',         [3 7 8 3],...     
                        'backgroundcolor',  'w',...
                        'Title',            'Performance Levels',...
                        'Units',            'Normalized',...
                        'FontWeight',       'bold',...
                        'FontSize',         12,...
                        'FontUnits','Normalized',...
                        'BorderWidth',      2,...
                        'BorderType',       'Line',...
                        'highlightcolor',   'k');

S.width_edit = uicontrol('Parent',              S.truck_panel,...
                         'Style',               'edit', ...
                         'Backgroundcolor',     'w',...
                         'FontSize',            8,...
                         'FontUnits','Normalized',...
                         'enable',              'off',...
                         'Units',               'Normalized',...
                         'Position',            [0.1 0.3 0.2 0.2]);                           

S.swept_text = uicontrol('Parent',              S.truck_panel,...
                         'Style',               'text',...
                         'String',              'Frontal Swing Maximum (m)',...
                         'FontSize',            6,...
                         'FontUnits','Normalized',...
                         'backgroundcolor',     'w',...
                         'Units',               'Normalized',...
                         'Position',            [0.05 0.6 0.4 0.4]);  

S.level_edit = uicontrol('Parent',              S.truck_panel,...
                         'Style',               'edit', ...
                         'Backgroundcolor',     'w',...
                         'FontSize',            5.5,...
                         'FontUnits','Normalized',...
                         'enable',              'off',...
                         'Units',               'Normalized',...
                         'Max',                 2,...
                         'Position',            [0.475 0.225 0.5 0.4]);                           

S.level_text = uicontrol('Parent',              S.truck_panel,...
                         'Style',               'text',...
                         'String',              'Level', ...
                         'FontSize',            10,...
                         'FontUnits','Normalized',...
                         'backgroundcolor',     'w',...
                         'Units',               'Normalized',...
                         'Position',            [0.575 0.7 0.3 0.25]); 
                     
%% Visualization panel   
S.visual_frontalswing_panel = uipanel('Parent',             S.frontalswing_visual_tab,...
                                      'Units',              'normalized',...
                                      'Position',           [0 0 1 1],...
                                      'BackgroundColor',    'w');                  

                     
S.frontalswing_nav_text =      uicontrol('Parent',           S.visual_frontalswing_panel,...
                                         'Style',            'text',...
                                         'backgroundColor',  'w',...
                                         'Units',            'Normalized',...
                                         'FontWeight',       'bold',...
                                         'String',           'Navigation zones',...
                                         'FontSize',         10,...
                                         'FontUnits',        'Normalized',...
                                         'Position',         [0.55 0.95 0.1 0.05]);  
                                  
S.frontalswing_nav_popup =       uicontrol('Parent',           S.visual_frontalswing_panel,...
                                           'Style',            'popup',...
                                           'backgroundColor',  'w',...
                                           'Units',            'Normalized',...
                                           'FontWeight',       'bold',...
                                           'String',           {'On','Off'},...
                                           'FontSize',         10,...
                                           'FontUnits',        'Normalized',...
                                           'Position',         [0.55 0.9 0.1 0.05],...
                                           'Callback',         @frontalswing_nav_callback); 
                                    
S.frontalswing_view_text =       uicontrol('Parent',           S.visual_frontalswing_panel,...
                                           'Style',            'text',...
                                           'backgroundColor',  'w',...
                                           'Units',            'Normalized',...
                                           'FontWeight',       'bold',...
                                           'FontSize',         10,...
                                           'String',           'Viewpoint',...
                                           'FontUnits',        'Normalized',...
                                           'Position',         [0.24 0.95 0.1 0.05]);
                                    
S.frontalswing_view_popup =       uicontrol('Parent',           S.visual_frontalswing_panel,...
                                            'Style',            'popup',...
                                            'backgroundColor',  'w',...
                                            'Units',            'Normalized',...
                                            'FontWeight',       'bold',...
                                            'FontSize',         10,...
                                            'String',           {'Top view','Side view','Rear view','Front view','Top rotating view'},...
                                            'FontUnits',        'Normalized',...
                                            'Value',            2,...
                                            'Position',         [0.25 0.9 0.1 0.05],...
                                            'Callback',         @frontalswing_view_callback); 


S.frontalswing_run_vis_push =    uicontrol('Parent',           S.visual_frontalswing_panel,...
                                           'Style',            'toggle',...
                                           'backgroundColor',  'w',...
                                           'ForegroundColor',  'b',...
                                           'Units',            'Normalized',...
                                           'FontWeight',       'bold',...
                                           'FontSize',         10,...
                                           'FontUnits',        'Normalized',...
                                           'Value',            0,...
                                           'Position',         [0.7 0.9 0.05 0.05],...
                                           'Callback',         @run_frontalswing_visualization_callback); 
                                    
S.frontalswing_stop_vis_push =   uicontrol('Parent',           S.visual_frontalswing_panel,...
                                           'Style',            'toggle',...
                                           'backgroundColor',  'w',...
                                           'ForegroundColor',  'b',...
                                           'Units',            'Normalized',...
                                           'FontWeight',       'bold',...
                                           'FontSize',         10,...
                                           'FontUnits',        'Normalized',...
                                           'Value',            1,...
                                           'Position',         [0.75 0.9 0.05 0.05],...
                                           'Callback',         @stop_frontalswing_visualization_callback); 

S.frontalswing_speed_string =    uicontrol('Parent',           S.visual_frontalswing_panel,...
                                           'Style',            'text',...
                                           'backgroundColor',  'w',...
                                           'Units',            'Normalized',...
                                           'FontWeight',       'bold',...
                                           'String',           'Simulation speed',...
                                           'FontSize',         10,...
                                           'FontUnits',        'Normalized',...
                                           'Value',            0,...
                                           'Position',         [0.35 0.95 0.2 0.05]);
                                    
S.frontalswing_speed_popup =     uicontrol('Parent',           S.visual_frontalswing_panel,...
                                           'Style',            'popup',...
                                           'backgroundColor',  'w',...
                                           'Units',            'Normalized',...
                                           'FontWeight',       'bold',...
                                           'String',           {'Low','Normal','High'},...
                                           'FontSize',         10,...
                                           'Value',            2,...
                                           'FontUnits',        'Normalized',...
                                           'Position',         [0.375 0.9 0.1 0.05],...
                                           'Callback',         @frontalswing_speed_callback); 
                                     
[a,~]=imread('play.jpg');
[r,e,~]=size(a); 
x=ceil(r/30); 
y=ceil(e/30); 
g=a(1:x:end,1:y:end,:);
g(g==255)=5.5*255;
set(S.frontalswing_run_vis_push,'CData',g);

[a,~]=imread('stop.jpg');
[r,e,~]=size(a); 
x=ceil(r/30); 
y=ceil(e/30); 
g=a(1:x:end,1:y:end,:);
g(g==255)=5.5*255;
set(S.frontalswing_stop_vis_push,'CData',g);

S.back_button = uicontrol('parent', S.visual_frontalswing_panel,...
                          'style','pushbutton',...
                          'BackgroundColor','w',...
                          'String','Back',...
                          'FontSize',10,...
                          'FontUnits','Normalized',...
                          'FontWeight','bold',...
                          'ForeGroundColor','r',...
                          'units','normalized',...
                          'position',[0.005 0.9 0.1 0.05],...
                          'Callback',@Back_callback);                                        

%% PBS Data                         
if results == 1
    dirName = ['simresults\C8_FrontalSwing\LZV_custom\',frontalswing_results];
    files = dir( fullfile(dirName,'*.mat') );
    filename = files.name;
    load(filename)
else
    load(['simresults/C8_FrontalSwing/LZV_custom/',Truckname,'/',frontalswing_filename])
end
axle1_positionright_x=s.steeraxle.posright(:,1);
axle1_positionright_y=s.steeraxle.posright(:,2);
axle1_positionleft_x=s.steeraxle.posleft(:,1);
axle1_positionleft_y=s.steeraxle.posleft(:,2);

f_coeff=friction_coeff;

temps=s.time;
positionx=s.steeraxle.pos(:,1);
positiony=s.steeraxle.pos(:,2);
steer=s.inputs.delta*180/pi;
front_positionright_x=s.cabinfront.rightpos(:,1);
front_positionright_y=s.cabinfront.rightpos(:,2);
front_positionleft_x=s.cabinfront.leftpos(:,1);
front_positionleft_y=s.cabinfront.leftpos(:,2);

if tractor==1
    semitrailer_positionright_x=eval(strcat('s.trailer',num2str(1),'semi.posright(:,1)'));
    semitrailer_positionright_y=eval(strcat('s.trailer',num2str(1),'semi.posright(:,2)'));
    semitrailer_positionleft_x=eval(strcat('s.trailer',num2str(1),'semi.posleft(:,1)'));
    semitrailer_positionleft_y=eval(strcat('s.trailer',num2str(1),'semi.posleft(:,2)'));

    outsidewheel_x=axle1_positionright_x;
    outsidewheel_y=axle1_positionright_y;
    primemover_x=front_positionright_x;
    primemover_y=front_positionright_y;
    semitrailer_x=semitrailer_positionright_x;
    semitrailer_y=semitrailer_positionright_y;

    outermost_path_x=front_positionright_x;
    outermost_path_y=front_positionright_y;
    innermost_path_x=axle1_positionright_x;
    innermost_path_y=axle1_positionright_y;
elseif tractor==0
    outermost_path_x=front_positionright_x;
    outermost_path_y=front_positionright_y;
    innermost_path_x=axle1_positionright_x;
    innermost_path_y=axle1_positionright_y;
end
% set(S.frictioncoeff_edit, 'string', num2str(f_coeff));
set(S.semitrailer_panel,'Visible','Off');
set(S.truck_panel,'Visible','Off');

%Steer angle
S.axes1 = axes('Parent',S.PBS_tab,'units','normalized','position',[.1 0.1 .2 .2]);
plot(S.axes1, temps,steer,'LineWidth',1.5);
title('Steer angle');
xlabel('time [s]');
ylabel('angle [deg]');
grid on;
radius=12.5;
Xin2=0:5:30;
Yin2=zeros(1,length(Xin2));

VThetaDeg2 = 90:-1:0;
VThetaDeg2=-VThetaDeg2;
VTheta2 = VThetaDeg2 *pi / 180;
xm2=(2*radius)-(width_firstaxle);
ym2=(2*radius)-(width_firstaxle);
a2=xm2/2;
b2=ym2/2;
R2=xm2/2;
XCercle2 = a2 + R2 * cos(VTheta2);
YCercle2 = b2 + R2 * sin(VTheta2);
XCercle2=XCercle2-(radius-(width_firstaxle/2))+30;

Yout2=(radius-(width_firstaxle/2)):5:200;
Xout2=ones(1,length(Yout2))*((radius+30)-(width_firstaxle/2));
X=[Xin2 XCercle2 Xout2];
Y=[Yin2 YCercle2 Yout2];   
rotAngle = 0;
xRot     = X*cosd(rotAngle) - Y*sind(rotAngle);
yRot     = X*sind(rotAngle) + Y*cosd(rotAngle);

outsidewheel_path_x=xRot;            %X
outsidewheel_path_y=yRot;            %Y

if tractor==0

    %maxwidth 
    maxwidth=abs(max(outermost_path_x)-max(innermost_path_x));
    if maxwidth<=0.7
        set(S.level_edit, 'string', 'Yes(rigid trucks, prime movers)');
        maxwidth_level = 'Yes(rigid trucks, prime movers)';
    elseif maxwidth<=1.5
        set(S.level_edit, 'string', 'Yes(buses,coaches)');
        maxwidth_level = 'Yes(buses,coaches)';
    else
        set(S.level_edit, 'string', 'No');
        maxwidth_level = 'No';
    end

    maxwidth=(round(maxwidth*100))/100;
    set(S.width_edit, 'string', num2str(maxwidth));

    %Position of the LZV
    S.axes2 = axes('Parent',S.PBS_tab,'units','normalized','position',[.5 0.1 .3 .3]);
    plot(S.axes2, outermost_path_x,outermost_path_y,'b',innermost_path_x,innermost_path_y,'b--','LineWidth',1.5);
    legend('Outermost Path','Innermost Path');
    title('Position of the LZV (Truck)');
    axis([42 43.5 0 70]);
    xlabel('x [m]');
    ylabel('y [m]');
    grid on;
    set(S.truck_panel,'Visible','On');

elseif tractor==1

    %Maximum of Difference 
    idx_primemover1=find(primemover_y>=10);
    idx_semitrailer1=find(semitrailer_y>=10);
    idx_primemover=idx_primemover1(1):length(primemover_y)-1;
    idx_semitrailer=idx_semitrailer1(1):length(semitrailer_y)-1;
    primemover_x1=primemover_x(idx_primemover);
    primemover_y1=primemover_y(idx_primemover);
    semitrailer_x1=semitrailer_x(idx_semitrailer);
    semitrailer_y1=semitrailer_y(idx_semitrailer);
    MoD=0;

    for i=1:length(primemover_x1) 
       for k=1:length(semitrailer_x1)
           if (abs(primemover_y1(i)-semitrailer_y1(k))<0.01) && (abs(primemover_x1(i)-semitrailer_x1(k))>MoD) && (primemover_x1(i)<semitrailer_x1(k)) 
               MoD=abs(primemover_x1(i)-semitrailer_x1(k)); 
           end
       end
    end

    if MoD<=0.4
        set(S.MoDlevel_edit, 'string', 'Yes');
        MoD_level = 'Yes';
    else
        set(S.MoDlevel_edit, 'string', 'No');
        MoD_level = 'No';
    end

    %Difference of Maxima
    DoM=abs(max(primemover_x)-max(semitrailer_x));
    if DoM<=0.2
        set(S.DoMlevel_edit, 'string', 'Yes');
        DoM_level = 'Yes';
    else
        set(S.DoMlevel_edit, 'string', 'No');
        DoM_level = 'No';
    end

    MoD=(round(MoD*100))/100;
    set(S.MoD_edit, 'string', num2str(MoD));
    DoM=(round(DoM*100))/100;
    set(S.DoM_edit, 'string', num2str(DoM));

    %Position of the LZV
    S.axes2 = axes('Parent',S.PBS_tab,'units','normalized','position',[.5 0.1 .3 .3]);
    plot(S.axes2, outsidewheel_x,outsidewheel_y,'-.b',primemover_x,primemover_y,'--c',semitrailer_x,semitrailer_y,'-.m','LineWidth',1.5);
    legend('outsidewheel','primemover','semitrailer');
    title('Position of the LZV (Semi-trailer)');
    axis([42 43.5 0 70]);
    xlabel('x [m]');
    ylabel('y [m]');
    grid on;

    %maxwidth 
    maxwidth=abs(max(outermost_path_x)-max(innermost_path_x));
    if maxwidth<=0.7
        set(S.level_edit, 'string', 'Yes(rigid trucks, prime movers)');
        maxwidth_level = 'Yes(rigid trucks, prime movers)';
    elseif maxwidth<=1.5
        set(S.level_edit, 'string', 'Yes(buses,coaches)');
        maxwidth_level = 'Yes(buses,coaches)';
    else
        set(S.level_edit, 'string', 'No');
        maxwidth_level = 'No';
    end

    maxwidth=(round(maxwidth*100))/100;
    set(S.width_edit, 'string', num2str(maxwidth));

    %Position of the LZV
    S.axes3 = axes('Parent',S.PBS_tab,'units','normalized','position',[.5 0.5 .3 .3]);
    plot(S.axes3, outermost_path_x,outermost_path_y,'b',innermost_path_x,innermost_path_y,'b--','LineWidth',1.5);
    legend('Outermost Path','Innermost Path');
    title('Position of the LZV (Truck)');
    axis([42 43.5 0 70]);
    xlabel('x [m]');
    ylabel('y [m]');
    grid on;
    set(S.semitrailer_panel,'Visible','On');
    set(S.truck_panel,'Visible','On');
end 

% Safe data in Excel file
if Excelsave == 1
    B = exist('MoD');
    if B == 1
        A = {maxwidth,maxwidth_level,MoD,MoD_level,DoM,DoM_level};
    else
        A = {maxwidth,maxwidth_level};
    end
    sheet = 1;
    x1Range = ['R', num2str(NumberOfRows)];
    xlswrite(ExcelFileName,A,sheet,x1Range)
end 

% Open the VRML visualization
if results == 1
    vr_world = vrworld(['simresults/C8_FrontalSwing/LZV_custom/',frontalswing_results,'/',frontalswing_wrl]);
else
    vr_world = vrworld(['simresults/C8_FrontalSwing/LZV_custom/',Truckname,'/',Truckname,'_frontalswing.wrl']);   
end

open(vr_world);
vr.canvas(vr_world,'Parent', S.visual_frontalswing_panel,'Units','Normalized',...
          'Position',[0 0 1 0.9],'Viewpoint','Side view','NavZones','On');  
      
viewpoint_frontalswing = 2;  
function run_frontalswing_visualization_callback(source, eventdata)
global Truckname S frontalswing_results frontalswing_filename
global frontalswing_wrl frontalswing_sim results  

% Press the toggle button
set(S.frontalswing_stop_vis_push, 'Value',0);

% Update the VR Sink block
if results == 1
    vrmodelname  = ['simresults/C8_FrontalSwing/LZV_custom/',frontalswing_results,'/',frontalswing_sim];
    load_system(vrmodelname)    
    [~,name,~] = fileparts(frontalswing_sim);
    h_vrsink = [name,'/VR sink'];
else
    vrmodelname = ['simresults/C8_FrontalSwing/LZV_custom/',Truckname,'/',Truckname,'_anim_frontalswing.slx'];  
    load_system(vrmodelname)
    h_vrsink=find_system('referenceblock','vrlib/VR Sink');
    h_vrsink=char(h_vrsink(1));
end
x = get_param(h_vrsink, 'FieldsWritten');
if results == 1
    set_param(h_vrsink, 'WorldFileName', frontalswing_wrl);
else
    set_param(h_vrsink, 'WorldFileName', [Truckname,'_frontalswing.wrl']);
end
set_param(h_vrsink, 'FieldsWritten', x);
save_system(vrmodelname)

% Load the simulation results
if isempty(frontalswing_results) == 0
    dirName = ['simresults\C8_FrontalSwing\LZV_custom\',frontalswing_results];
    files = dir( fullfile(dirName,'*.mat') );
    filename = files.name;
    load(filename,'VR','s','dt');
else
    load(['simresults/C8_FrontalSwing/LZV_custom/',Truckname,'/',frontalswing_filename])

end       
assignin('base','VR',VR);
assignin('base','s',s);
assignin('base','dt',dt);

% Start simulation
sim(vrmodelname)

% Set the toggle buttons to the right value when simulation is done
set(S.frontalswing_stop_vis_push, 'Value',1);
set(S.frontalswing_run_vis_push, 'Value',0);

function stop_frontalswing_visualization_callback(source,eventdata)
global S
set_param(bdroot, 'SimulationCommand', 'stop')
set(S.frontalswing_stop_vis_push, 'Value',1);
set(S.frontalswing_run_vis_push, 'Value',0);

function frontalswing_speed_callback(source,eventdata)
global S results frontalswing_results Truckname frontalswing_sim

if results == 1
    vrmodelname  = ['simresults/C8_FrontalSwing/LZV_custom/',frontalswing_results,'/',frontalswing_sim];
    load_system(vrmodelname)    
    [~,name,~] = fileparts(frontalswing_sim);
    h_vrsink = [name,'/VR sink'];
else
    vrmodelname = ['simresults/C8_FrontalSwing/LZV_custom/',Truckname,'/',Truckname,'_anim_frontalswing.slx'];  
    load_system(vrmodelname)
    h_vrsink=find_system('referenceblock','vrlib/VR Sink');
    h_vrsink=char(h_vrsink(1));
end

if get(S.frontalswing_speed_popup,'Value') == 1
    set_param(h_vrsink, 'SampleTime','0.05')
elseif get(S.frontalswing_speed_popup,'Value') == 2
    set_param(h_vrsink, 'SampleTime','0.1')
elseif get(S.frontalswing_speed_popup,'Value') == 3
    set_param(h_vrsink, 'SampleTime','0.5')
end

function frontalswing_view_callback(source,eventdata)
global S results frontalswing_results frontalswing_wrl Truckname viewpoint_frontalswing

if results == 1
    vr_world = vrworld(['simresults/C8_FrontalSwing/LZV_custom/',frontalswing_results,'/',frontalswing_wrl]);
else
    vr_world = vrworld(['simresults/C8_FrontalSwing/LZV_custom/',Truckname,'/',Truckname,'_frontalswing.wrl']);   
end
open(vr_world);
vr.canvas(vr_world,'Parent', S.visual_frontalswing_panel,'Units','Normalized',...
          'Position',[0 0 1 0.9],'Viewpoint','Side view','NavZones','On');  
      
if get(S.frontalswing_view_popup,'Value') == 1
    viewpoint_frontalswing = 1;
    if get(S.frontalswing_nav_popup,'Value') == 1
        vr.canvas(vr_world,'Parent', S.visual_frontalswing_panel,'Units','Normalized',...
        'Position',[0 0 1 0.9],'Viewpoint','Top view (moving)','NavZones','On');
    else
        vr.canvas(vr_world,'Parent', S.visual_frontalswing_panel,'Units','Normalized',...
        'Position',[0 0 1 0.9],'Viewpoint','Top view (moving)','NavZones','Off');
    end
elseif get(S.frontalswing_view_popup,'Value') == 2
    viewpoint_frontalswing = 2;
    if get(S.frontalswing_nav_popup,'Value') == 1    
        vr.canvas(vr_world,'Parent', S.visual_frontalswing_panel,'Units','Normalized',...
        'Position',[0 0 1 0.9],'Viewpoint','Side view','NavZones','On');
    else
        vr.canvas(vr_world,'Parent', S.visual_frontalswing_panel,'Units','Normalized',...
        'Position',[0 0 1 0.9],'Viewpoint','Side view','NavZones','Off');        
    end
elseif get(S.frontalswing_view_popup,'Value') == 3
    viewpoint_frontalswing = 3;
    if get(S.frontalswing_nav_popup,'Value') == 1
        vr.canvas(vr_world,'Parent', S.visual_frontalswing_panel,'Units','Normalized',...
              'Position',[0 0 1 0.9],'Viewpoint','Rear view (moving)','NavZones','On');
    else
        vr.canvas(vr_world,'Parent', S.visual_frontalswing_panel,'Units','Normalized',...
        'Position',[0 0 1 0.9],'Viewpoint','Rear view (moving)','NavZones','Off');        
    end
elseif get(S.frontalswing_view_popup,'Value') == 4
    viewpoint_frontalswing = 4;
    if get(S.frontalswing_nav_popup,'Value') == 1
        vr.canvas(vr_world,'Parent', S.visual_frontalswing_panel,'Units','Normalized',...
        'Position',[0 0 1 0.9],'Viewpoint','Front view (moving)','NavZones','On');
    else
        vr.canvas(vr_world,'Parent', S.visual_frontalswing_panel,'Units','Normalized',...
        'Position',[0 0 1 0.9],'Viewpoint','Front view (moving)','NavZones','Off');        
    end
elseif get(S.frontalswing_view_popup,'Value') == 5
    viewpoint_frontalswing = 5;
    if get(S.frontalswing_nav_popup,'Value') == 1
        vr.canvas(vr_world,'Parent', S.visual_frontalswing_panel,'Units','Normalized',...
        'Position',[0 0 1 0.9],'Viewpoint','Top rotating view','NavZones','On');
    else
        vr.canvas(vr_world,'Parent', S.visual_frontalswing_panel,'Units','Normalized',...
        'Position',[0 0 1 0.9],'Viewpoint','Top rotating view','NavZones','Off');        
    end
end

function frontalswing_nav_callback(source,eventdata)
global S results frontalswing_wrl Truckname frontalswing_results viewpoint_frontalswing

% Open the VRML visualization
if results == 1
    vr_world = vrworld(['simresults/C8_FrontalSwing/LZV_custom/',frontalswing_results,'/',frontalswing_wrl]);
else
    vr_world = vrworld(['simresults/C8_FrontalSwing/LZV_custom/',Truckname,'/',Truckname,'_frontalswing.wrl']);   
end
open(vr_world);
vr.canvas(vr_world,'Parent', S.visual_frontalswing_panel,'Units','Normalized',...
          'Position',[0 0 1 0.9],'Viewpoint','Side view','NavZones','On'); 
      
if get(S.frontalswing_nav_popup,'Value') == 1
    if viewpoint_frontalswing == 1
    vr.canvas(vr_world,'Parent', S.visual_frontalswing_panel,'Units','Normalized',...
              'Position',[0 0 1 0.9],'Viewpoint', 'Top view (moving)','NavZones','On');        
    elseif viewpoint_frontalswing == 2
    vr.canvas(vr_world,'Parent', S.visual_frontalswing_panel,'Units','Normalized',...
              'Position',[0 0 1 0.9],'Viewpoint', 'Side view','NavZones','On');
    elseif viewpoint_frontalswing == 3
    vr.canvas(vr_world,'Parent', S.visual_frontalswing_panel,'Units','Normalized',...
              'Position',[0 0 1 0.9],'Viewpoint', 'Rear view (moving)','NavZones','On');
    elseif viewpoint_frontalswing == 4
    vr.canvas(vr_world,'Parent', S.visual_frontalswing_panel,'Units','Normalized',...
              'Position',[0 0 1 0.9],'Viewpoint', 'Front view (moving)','NavZones','On');
    elseif viewpoint_frontalswing == 5
    vr.canvas(vr_world,'Parent', S.visual_frontalswing_panel,'Units','Normalized',...
              'Position',[0 0 1 0.9],'Viewpoint', 'Top rotating view','NavZones','On');
    end
    
elseif get(S.frontalswing_nav_popup,'Value') == 2
    if viewpoint_frontalswing == 1
    vr.canvas(vr_world,'Parent', S.visual_frontalswing_panel,'Units','Normalized',...
              'Position',[0 0 1 0.9],'Viewpoint', 'Top view (moving)','NavZones','Off');        
    elseif viewpoint_frontalswing == 2
    vr.canvas(vr_world,'Parent', S.visual_frontalswing_panel,'Units','Normalized',...
              'Position',[0 0 1 0.9],'Viewpoint', 'Side view','NavZones','Off');
    elseif viewpoint_frontalswing == 3
    vr.canvas(vr_world,'Parent', S.visual_frontalswing_panel,'Units','Normalized',...
              'Position',[0 0 1 0.9],'Viewpoint', 'Rear view (moving)','NavZones','Off');
    elseif viewpoint_frontalswing == 4
    vr.canvas(vr_world,'Parent', S.visual_frontalswing_panel,'Units','Normalized',...
              'Position',[0 0 1 0.9],'Viewpoint', 'Front view (moving)','NavZones','Off');
    elseif viewpoint_frontalswing == 5
    vr.canvas(vr_world,'Parent', S.visual_frontalswing_panel,'Units','Normalized',...
              'Position',[0 0 1 0.9],'Viewpoint', 'Top rotating view','NavZones','Off');
    end
end

function Back_callback(source, eventdata)
global results custom

if results == 1
    closereq;
    core_simulation_results
elseif results == 0
    closereq;
    if custom == 1
        custom_core_simulation
    else
        core_simulation
    end
end