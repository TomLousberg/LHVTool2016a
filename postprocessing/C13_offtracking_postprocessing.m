function C13_offtracking_postprocessing

global p axle_trailer NumberOfRows S results Excelsave ExcelFileName
global offtracking_results Truckname viewpoint_offtracking
global offtracking_filename offtracking_wrl

javaaddpath(which('MatlabGarbageCollector.jar'));
org.dt.matlab.utilities.JavaMemoryCleaner.clear(1);
clc;

%% offtracking tab lay-out

set(S.tab18,'Parent', S.tgroup);

S.tgroup_offtracking = uitabgroup('Parent',S.tab18, 'tablocation', 'right');
S.PBS_tab = uitab('Parent', S.tgroup_offtracking, 'backgroundcolor','w', 'Title','PBS Data');
S.offtracking_visual_tab = uitab('Parent', S.tgroup_offtracking, 'backgroundcolor','w', 'Title','Visulaization');

S.back_button = uicontrol('parent', S.PBS_tab,...
                          'style','pushbutton',...
                          'BackgroundColor','w',...
                          'String','Back',...
                          'FontSize',10,...
                          'FontUnits','Normalized',...
                          'FontWeight','bold',...
                          'ForeGroundColor','r',...
                          'units','normalized',...
                          'position',[0.005 0.94 0.1 0.05],...
                          'Callback',@Back_callback);
                      
S.Offtracking_title = uicontrol('Parent',           S.PBS_tab,...
                                'Style',            'text',...
                                'String',           'Offtracking',...
                                'Backgroundcolor',  'w',...
                                'FontSize',         3.5,...
                                'FontUnits','Normalized',...
                                'FontWeight',       'bold',...
                                'Units',            'Normalized',...
                                'Position',         [.375 .775 .2 .2]);

S.panel = uipanel('Parent',             S.PBS_tab,...
                  'Units',              'Centimeters',...
                  'Position',           [12 10 6 5],...    
                  'backgroundcolor',    'w',...
                  'Title',              'Performance Levels',...
                  'Units',              'Normalized',...
                  'FontWeight',         'bold',...
                  'FontSize',           12,...
                  'FontUnits','Normalized',...
                  'BorderWidth',        2,...
                  'BorderType',         'Line',...
                  'highlightcolor',     'k');

 S.dampingratio_edit = uicontrol('Parent',              S.panel,...
                                 'Style',               'edit',...
                                 'Backgroundcolor',     'w',...
                                 'FontSize',            7,...
                                 'FontUnits','Normalized',...
                                 'enable',              'off',...
                                 'Units',               'Normalized',...
                                 'Position',            [.2 .6 .2 .2]);                           

S.dampingratio_text = uicontrol('Parent',           S.panel,...
                                'Style',            'text',...
                                'String',           'Overshoot Distance',...
                                'FontSize',         7,...
                                'FontUnits','Normalized',...
                                'backgroundcolor',  'w',...
                                'Units',            'Normalized',...
                                'Position',         [.05 .8 .6 .15]);

S.level_edit = uicontrol('Parent',              S.panel,...
                         'Style',               'edit', ...
                         'Backgroundcolor',     'w',...
                         'FontSize',            7,...
                         'FontUnits','Normalized',...
                         'enable',              'off',...
                         'Units',               'Normalized',...
                         'Position',            [.625 .6 .2 .2]);                           

S.level_text = uicontrol('Parent',          S.panel,...
                         'Style',           'text',...
                         'String',          'Level',...
                         'FontSize',        7,...
                         'FontUnits','Normalized',...
                         'backgroundcolor', 'w',...
                         'Units',           'Normalized',...
                         'Position',        [.625 .8 .25 .15]);                     

 S.panel2 = uipanel('Parent',           S.panel,...
                    'backgroundcolor',  'w',...
                    'Title',            'Procedure Validity',...
                    'Units',            'Normalized',...
                    'Position',         [.05 .1 .9 .4],...
                    'FontWeight',       'bold',...
                    'FontSize',         12,...
                    'FontUnits','Normalized',...
                    'BorderWidth',      2,...
                    'BorderType',       'Line',...
                    'highlightcolor',   'k');

 S.maxlatacc_edit = uicontrol('Parent',             S.panel2,...
                              'Style',              'edit', ...
                              'Backgroundcolor',    'w',...
                              'FontSize',           7,...
                              'FontUnits','Normalized',...
                              'enable',             'off',...
                              'Units',              'Normalized',...
                              'Position',           [.6 .5 .2 .4]);                           

S.maxlataccg_text = uicontrol('Parent',             S.panel2,...
                              'Style',              'text',...
                              'String',             'Maximum Lateral Acceleration (/g)',...
                              'FontSize',           6,...
                              'FontUnits','Normalized',...
                              'backgroundcolor',    'w',...
                              'Units',              'Normalized',...
                              'Position',           [.05 .4 .5 .5]);

S.maxlatacc_checkbox = uicontrol('Parent',              S.panel2,...
                                 'Style',               'checkbox',...
                                 'backgroundcolor',     'w',...
                                 'Enable',              'off',...
                                 'Units',               'Normalized',...
                                 'Position',            [.9, .5 .1 .2]);                    

%% Visualization panel  
S.visual_offtracking_panel = uipanel('Parent',             S.offtracking_visual_tab,...
                         'Units',              'normalized',...
                         'Position',           [0 0 1 1],...
                         'BackgroundColor',    'w');                  

S.offtracking_nav_text =      uicontrol('Parent',           S.visual_offtracking_panel,...
                                      'Style',            'text',...
                                      'backgroundColor',  'w',...
                                      'Units',            'Normalized',...
                                      'FontWeight',       'bold',...
                                      'String',           'Navigation zones',...
                                      'FontSize',         10,...
                                      'FontUnits',        'Normalized',...
                                      'Position',         [0.55 0.95 0.1 0.05]);  
                                  
S.offtracking_nav_popup =       uicontrol('Parent',           S.visual_offtracking_panel,...
                                        'Style',            'popup',...
                                        'backgroundColor',  'w',...
                                        'Units',            'Normalized',...
                                        'FontWeight',       'bold',...
                                        'String',           {'On','Off'},...
                                        'FontSize',         10,...
                                        'FontUnits',        'Normalized',...
                                        'Position',         [0.55 0.9 0.1 0.05],...
                                        'Callback',         @offtracking_nav_callback); 
                                    
S.offtracking_view_text =       uicontrol('Parent',           S.visual_offtracking_panel,...
                                        'Style',            'text',...
                                        'backgroundColor',  'w',...
                                        'Units',            'Normalized',...
                                        'FontWeight',       'bold',...
                                        'FontSize',         10,...
                                        'String',           'Viewpoint',...
                                        'FontUnits',        'Normalized',...
                                        'Position',         [0.24 0.95 0.1 0.05]);
                                    
S.offtracking_view_popup =       uicontrol('Parent',           S.visual_offtracking_panel,...
                                         'Style',            'popup',...
                                         'backgroundColor',  'w',...
                                         'Units',            'Normalized',...
                                         'FontWeight',       'bold',...
                                         'FontSize',         10,...
                                         'String',           {'Top view','Side view','Rear view','Front view','Top rotating view'},...
                                         'FontUnits',        'Normalized',...
                                         'Value',            2,...
                                         'Position',         [0.25 0.9 0.1 0.05],...
                                         'Callback',         @offtracking_view_callback); 


S.offtracking_run_vis_push =    uicontrol('Parent',           S.visual_offtracking_panel,...
                                        'Style',            'toggle',...
                                        'backgroundColor',  'w',...
                                        'ForegroundColor',  'b',...
                                        'Units',            'Normalized',...
                                        'FontWeight',       'bold',...
                                        'FontSize',         10,...
                                        'FontUnits',        'Normalized',...
                                        'Value',            0,...
                                        'Position',         [0.7 0.9 0.05 0.05],...
                                        'Callback',         @run_offtracking_visualization_callback); 
                                    
S.offtracking_stop_vis_push =   uicontrol('Parent',           S.visual_offtracking_panel,...
                                        'Style',            'toggle',...
                                        'backgroundColor',  'w',...
                                        'ForegroundColor',  'b',...
                                        'Units',            'Normalized',...
                                        'FontWeight',       'bold',...
                                        'FontSize',         10,...
                                        'FontUnits',        'Normalized',...
                                        'Value',            1,...
                                        'Position',         [0.75 0.9 0.05 0.05],...
                                        'Callback',         @stop_offtracking_visualization_callback); 

S.offtracking_speed_string =    uicontrol('Parent',           S.visual_offtracking_panel,...
                                        'Style',            'text',...
                                        'backgroundColor',  'w',...
                                        'Units',            'Normalized',...
                                        'FontWeight',       'bold',...
                                        'String',           'Simulation speed',...
                                        'FontSize',         10,...
                                        'FontUnits',        'Normalized',...
                                        'Value',            0,...
                                        'Position',         [0.35 0.95 0.2 0.05]);
                                    
S.offtracking_speed_popup =     uicontrol('Parent',           S.visual_offtracking_panel,...
                                        'Style',            'popup',...
                                        'backgroundColor',  'w',...
                                        'Units',            'Normalized',...
                                        'FontWeight',       'bold',...
                                        'String',           {'Low','Normal','High'},...
                                        'FontSize',         10,...
                                        'Value',            2,...
                                        'FontUnits',        'Normalized',...
                                        'Position',         [0.375 0.9 0.1 0.05],...
                                        'Callback',         @offtracking_speed_callback); 
                                     
[a,~]=imread('play.jpg');
[r,e,~]=size(a); 
x=ceil(r/30); 
y=ceil(e/30); 
g=a(1:x:end,1:y:end,:);
g(g==255)=5.5*255;
set(S.offtracking_run_vis_push,'CData',g);

[a,~]=imread('stop.jpg');
[r,e,~]=size(a); 
x=ceil(r/30); 
y=ceil(e/30); 
g=a(1:x:end,1:y:end,:);
g(g==255)=5.5*255;
set(S.offtracking_stop_vis_push,'CData',g);

S.back_button = uicontrol('parent', S.visual_offtracking_panel,...
                          'style','pushbutton',...
                          'BackgroundColor','w',...
                          'String','Back',...
                          'FontSize',10,...
                          'FontUnits','Normalized',...
                          'FontWeight','bold',...
                          'ForeGroundColor','r',...
                          'units','normalized',...
                          'position',[0.005 0.9 0.1 0.05],...
                          'Callback',@Back_callback);                                        
  
%% PBS Data                         
if results == 1
    dirName = ['simresults\C13_Offtracking\LZV_custom\',offtracking_results];
    files = dir( fullfile(dirName,'*.mat') );
    filename = files.name;
    load(filename)
else
    load(['simresults/C13_Offtracking/LZV_custom/',Truckname,'/',offtracking_filename])
end 
    
temps1=s.time;
idxDLTR=find(temps1>2);
idx1=find(temps1>8.5);

steer=s.inputs.delta*180/pi;
steer=steer(idxDLTR);
positionx=s.steeraxle.pos(idxDLTR,1);
positiony=s.steeraxle.pos(idxDLTR,2);
positionendx=eval(strcat('s.trailer',num2str(p-1),'axle',num2str(axle_trailer(p-1)),'.pos(idxDLTR,1)'));
positionendy=eval(strcat('s.trailer',num2str(p-1),'axle',num2str(axle_trailer(p-1)),'.pos(idxDLTR,2)'));
positionendx_mesure=eval(strcat('s.trailer',num2str(p-1),'axle',num2str(axle_trailer(p-1)),'.pos(idx1,1)'));
positionendy_mesure=eval(strcat('s.trailer',num2str(p-1),'axle',num2str(axle_trailer(p-1)),'.pos(idx1,2)'));
temps=s.time(idxDLTR);

firstaxleampli_acc=s.steeraxle1.acc(idxDLTR,2);
maxlatacc=max(firstaxleampli_acc);

positionx1=s.steeraxle.pos(:,1);
positiony1=s.steeraxle.pos(:,2);
positionendx1=eval(strcat('s.trailer',num2str(p-1),'axle',num2str(axle_trailer(p-1)),'.pos(:,1)'));
positionendy1=eval(strcat('s.trailer',num2str(p-1),'axle',num2str(axle_trailer(p-1)),'.pos(:,2)'));
%overshootdist
idx=find(s.time>15);
Q1=[positionx1(idx(length(idx)-20)) ;positiony1(idx(length(idx)-20))];
Q2=[positionx1(idx(length(idx))) ;positiony1(idx(length(idx)))];

idx_endsine=idx1(1):1:length(s.time);
coeffdir=(Q2(2)-Q1(2))/(Q2(1)-Q1(1));
position_endsine_x=positionendx1(idx_endsine);
position_endsine_y=positionendy1(idx_endsine);

n=1;
maxd=0;
for i=1:length(position_endsine_x)
    P=[position_endsine_x(n) ; position_endsine_y(n)];
    d= norm(abs(det([Q2-Q1,P-Q1]))/abs(Q2-Q1));
    n=n+1;
    d1= det([Q2-Q1,P-Q1])/(Q2-Q1);
    if d1(1)>=0
        if d>maxd
            maxd=d;
        end
    end
end

overshootdist=maxd;
f_coeff=friction_coeff;
%     set(S.frictioncoeff_edit, 'string', num2str(f_coeff));
%Level Performance
if overshootdist<=0.6
    set(S.level_edit, 'string', '1');
    Level = '1';
elseif overshootdist<=0.8
    set(S.level_edit, 'string', '2');
    Level = '2';
elseif overshootdist<=1
    set(S.level_edit, 'string', '3');
    Level = '3';
elseif overshootdist<=1.2
    set(S.level_edit, 'string', '4');
    Level = '4';
else
    set(S.level_edit, 'string', '5');
    Level = '5';
end

overshootdist=(round(overshootdist*1000))/1000;
set(S.dampingratio_edit, 'string', num2str(overshootdist));    

%Procedure Validity 
maxlataccg=maxlatacc/9.807;
maxlataccg=(round(maxlataccg*1000))/1000;
set(S.maxlatacc_edit, 'string', num2str(maxlataccg));
if maxlataccg>0.15
    set(S.maxlatacc_checkbox, 'Value', 1);
else
    set(S.maxlatacc_checkbox, 'Value', 0);
end

%Steer input
S.axes1 = axes('Parent',S.PBS_tab,'units','normalized','position',[.05 .1 .4 .35]);
plot(S.axes1, temps,steer,'LineWidth',1.5);
title('Steering wheel angle');
xlabel('t [s]');
ylabel('\delta [deg]');
grid on;

% Position of the LZV
S.axes2 = axes('Parent',S.PBS_tab,'units','normalized','position',[.55 .1 .4 .35]);
plot(S.axes2, positionx,positiony,'b-',positionendx,positionendy,'r--','LineWidth',1.5);
hold on
length_mesure=positionendx_mesure(length(positionendx_mesure))-positionendx_mesure(1);
a=0:-0.1:-(length_mesure+100);
b=a.*coeffdir;
a=positionx(length(positionx))+a;
b=positiony(length(positiony))+b;
plot(S.axes2, a,b,'k','LineWidth',1.5);
title('Position of the LZV');
legend('First axle','Last axle','Tangent to exit path');
xlabel('x [m]');
ylabel('y [m]');
grid on;

% Safe data in Excel file
if Excelsave == 1
    A = {overshootdist,Level};
    sheet = 1;
    x1Range = ['AI', num2str(NumberOfRows)];
    xlswrite(ExcelFileName,A,sheet,x1Range)
end 

% Open the VRML visualization
if results == 1
    vr_world = vrworld(['simresults/C13_Offtracking/LZV_custom/',offtracking_results,'/',offtracking_wrl]);
else
    vr_world = vrworld(['simresults/C13_Offtracking/LZV_custom/',Truckname,'/',Truckname,'_offtracking.wrl']);   
end

open(vr_world);
vr.canvas(vr_world,'Parent', S.visual_offtracking_panel,'Units','Normalized',...
          'Position',[0 0 1 0.9],'Viewpoint','Side view','NavZones','On');  
      
viewpoint_offtracking = 2;  

function run_offtracking_visualization_callback(eventdata, source)
global S offtracking_results offtracking_filename 
global Truckname offtracking_wrl offtracking_sim results

% Press the toggle button
set(S.offtracking_stop_vis_push, 'Value',0);

% Update the VR Sink block
if results == 1
    vrmodelname  = ['simresults/C13_Offtracking/LZV_custom/',offtracking_results,'/',offtracking_sim];
    load_system(vrmodelname)    
    [~,name,~] = fileparts(offtracking_sim);
    h_vrsink = [name,'/VR sink'];
else
    vrmodelname = ['simresults/C13_Offtracking/LZV_custom/',Truckname,'/',Truckname,'_anim_offtracking.slx'];  
    load_system(vrmodelname)
    h_vrsink=find_system('referenceblock','vrlib/VR Sink');
    h_vrsink=char(h_vrsink(1));
end
x = get_param(h_vrsink, 'FieldsWritten');
if results == 1
    set_param(h_vrsink, 'WorldFileName', offtracking_wrl);
else
    set_param(h_vrsink, 'WorldFileName', [Truckname,'_offtracking.wrl']);
end
set_param(h_vrsink, 'FieldsWritten', x);
save_system(vrmodelname)

if isempty(offtracking_results) == 0
    dirName = ['simresults\C13_Offtracking\LZV_custom\',offtracking_results];
    files = dir( fullfile(dirName,'*.mat') );
    filename = files.name;
    load(filename,'VR','s','dt');
else
    load(['simresults/C13_Offtracking/LZV_custom/',Truckname,'/',offtracking_filename])
end 
assignin('base','VR',VR);
assignin('base','s',s);
assignin('base','dt',dt);

% Start simulation
sim(vrmodelname)

% Set the toggle buttons to the right value when simulation is done
set(S.offtracking_stop_vis_push, 'Value',1);
set(S.offtracking_run_vis_push, 'Value',0);

function stop_offtracking_visualization_callback(source,eventdata)
global S
set_param(bdroot, 'SimulationCommand', 'stop')
set(S.offtracking_stop_vis_push, 'Value',1);
set(S.offtracking_run_vis_push, 'Value',0);

function offtracking_speed_callback(source,eventdata)
global S results offtracking_results Truckname offtracking_sim

if results == 1
    vrmodelname  = ['simresults/C13_Offtracking/LZV_custom/',offtracking_results,'/',offtracking_sim];
    load_system(vrmodelname)    
    [~,name,~] = fileparts(offtracking_sim);
    h_vrsink = [name,'/VR sink'];
else
    vrmodelname = ['simresults/C13_Offtracking/LZV_custom/',Truckname,'/',Truckname,'_anim_offtracking.slx'];  
    load_system(vrmodelname)
    h_vrsink=find_system('referenceblock','vrlib/VR Sink');
    h_vrsink=char(h_vrsink(1));
end

if get(S.offtracking_speed_popup,'Value') == 1
    set_param(h_vrsink, 'SampleTime','0.05')
elseif get(S.offtracking_speed_popup,'Value') == 2
    set_param(h_vrsink, 'SampleTime','0.1')
elseif get(S.offtracking_speed_popup,'Value') == 3
    set_param(h_vrsink, 'SampleTime','0.5')
end

function offtracking_view_callback(source,eventdata)
global S results offtracking_results offtracking_wrl Truckname viewpoint_offtracking

if results == 1
    vr_world = vrworld(['simresults/C13_Offtracking/LZV_custom/',offtracking_results,'/',offtracking_wrl]);
else
    vr_world = vrworld(['simresults/C13_Offtracking/LZV_custom/',Truckname,'/',Truckname,'_offtracking.wrl']);   
end
open(vr_world);
vr.canvas(vr_world,'Parent', S.visual_offtracking_panel,'Units','Normalized',...
          'Position',[0 0 1 0.9],'Viewpoint','Side view','NavZones','On');  
      
if get(S.offtracking_view_popup,'Value') == 1
    viewpoint_offtracking = 1;
    if get(S.offtracking_nav_popup,'Value') == 1
        vr.canvas(vr_world,'Parent', S.visual_offtracking_panel,'Units','Normalized',...
        'Position',[0 0 1 0.9],'Viewpoint','Top view (moving)','NavZones','On');
    else
        vr.canvas(vr_world,'Parent', S.visual_offtracking_panel,'Units','Normalized',...
        'Position',[0 0 1 0.9],'Viewpoint','Top view (moving)','NavZones','Off');
    end
elseif get(S.offtracking_view_popup,'Value') == 2
    viewpoint_offtracking = 2;
    if get(S.offtracking_nav_popup,'Value') == 1    
        vr.canvas(vr_world,'Parent', S.visual_offtracking_panel,'Units','Normalized',...
        'Position',[0 0 1 0.9],'Viewpoint','Side view','NavZones','On');
    else
        vr.canvas(vr_world,'Parent', S.visual_offtracking_panel,'Units','Normalized',...
        'Position',[0 0 1 0.9],'Viewpoint','Side view','NavZones','Off');        
    end
elseif get(S.offtracking_view_popup,'Value') == 3
    viewpoint_offtracking = 3;
    if get(S.offtracking_nav_popup,'Value') == 1
        vr.canvas(vr_world,'Parent', S.visual_offtracking_panel,'Units','Normalized',...
              'Position',[0 0 1 0.9],'Viewpoint','Rear view (moving)','NavZones','On');
    else
        vr.canvas(vr_world,'Parent', S.visual_offtracking_panel,'Units','Normalized',...
        'Position',[0 0 1 0.9],'Viewpoint','Rear view (moving)','NavZones','Off');        
    end
elseif get(S.offtracking_view_popup,'Value') == 4
    viewpoint_offtracking = 4;
    if get(S.offtracking_nav_popup,'Value') == 1
        vr.canvas(vr_world,'Parent', S.visual_offtracking_panel,'Units','Normalized',...
        'Position',[0 0 1 0.9],'Viewpoint','Front view (moving)','NavZones','On');
    else
        vr.canvas(vr_world,'Parent', S.visual_offtracking_panel,'Units','Normalized',...
        'Position',[0 0 1 0.9],'Viewpoint','Front view (moving)','NavZones','Off');        
    end
elseif get(S.offtracking_view_popup,'Value') == 5
    viewpoint_offtracking = 5;
    if get(S.offtracking_nav_popup,'Value') == 1
        vr.canvas(vr_world,'Parent', S.visual_offtracking_panel,'Units','Normalized',...
        'Position',[0 0 1 0.9],'Viewpoint','Top rotating view','NavZones','On');
    else
        vr.canvas(vr_world,'Parent', S.visual_offtracking_panel,'Units','Normalized',...
        'Position',[0 0 1 0.9],'Viewpoint','Top rotating view','NavZones','Off');        
    end
end

function offtracking_nav_callback(source,eventdata)
global S results offtracking_wrl Truckname offtracking_results viewpoint_offtracking

% Open the VRML visualization
if results == 1
    vr_world = vrworld(['simresults/C13_Offtracking/LZV_custom/',offtracking_results,'/',offtracking_wrl]);
else
    vr_world = vrworld(['simresults/C13_Offtracking/LZV_custom/',Truckname,'/',Truckname,'_offtracking.wrl']);   
end
open(vr_world);
vr.canvas(vr_world,'Parent', S.visual_offtracking_panel,'Units','Normalized',...
          'Position',[0 0 1 0.9],'Viewpoint','Side view','NavZones','On'); 
      
if get(S.offtracking_nav_popup,'Value') == 1
    if viewpoint_offtracking == 1
    vr.canvas(vr_world,'Parent', S.visual_offtracking_panel,'Units','Normalized',...
              'Position',[0 0 1 0.9],'Viewpoint', 'Top view (moving)','NavZones','On');        
    elseif viewpoint_offtracking == 2
    vr.canvas(vr_world,'Parent', S.visual_offtracking_panel,'Units','Normalized',...
              'Position',[0 0 1 0.9],'Viewpoint', 'Side view','NavZones','On');
    elseif viewpoint_offtracking == 3
    vr.canvas(vr_world,'Parent', S.visual_offtracking_panel,'Units','Normalized',...
              'Position',[0 0 1 0.9],'Viewpoint', 'Rear view (moving)','NavZones','On');
    elseif viewpoint_offtracking == 4
    vr.canvas(vr_world,'Parent', S.visual_offtracking_panel,'Units','Normalized',...
              'Position',[0 0 1 0.9],'Viewpoint', 'Front view (moving)','NavZones','On');
    elseif viewpoint_offtracking == 5
    vr.canvas(vr_world,'Parent', S.visual_offtracking_panel,'Units','Normalized',...
              'Position',[0 0 1 0.9],'Viewpoint', 'Top rotating view','NavZones','On');
    end
    
elseif get(S.offtracking_nav_popup,'Value') == 2
    if viewpoint_offtracking == 1
    vr.canvas(vr_world,'Parent', S.visual_offtracking_panel,'Units','Normalized',...
              'Position',[0 0 1 0.9],'Viewpoint', 'Top view (moving)','NavZones','Off');        
    elseif viewpoint_offtracking == 2
    vr.canvas(vr_world,'Parent', S.visual_offtracking_panel,'Units','Normalized',...
              'Position',[0 0 1 0.9],'Viewpoint', 'Side view','NavZones','Off');
    elseif viewpoint_offtracking == 3
    vr.canvas(vr_world,'Parent', S.visual_offtracking_panel,'Units','Normalized',...
              'Position',[0 0 1 0.9],'Viewpoint', 'Rear view (moving)','NavZones','Off');
    elseif viewpoint_offtracking == 4
    vr.canvas(vr_world,'Parent', S.visual_offtracking_panel,'Units','Normalized',...
              'Position',[0 0 1 0.9],'Viewpoint', 'Front view (moving)','NavZones','Off');
    elseif viewpoint_offtracking == 5
    vr.canvas(vr_world,'Parent', S.visual_offtracking_panel,'Units','Normalized',...
              'Position',[0 0 1 0.9],'Viewpoint', 'Top rotating view','NavZones','Off');
    end
end

function Back_callback(source, eventdata)
global results custom

if results == 1
    closereq;
    core_simulation_results
elseif results == 0
    closereq;
    if custom == 1
        custom_core_simulation
    else
        core_simulation
    end
end